{"ast":null,"code":"import { getFeatureFlags } from \"../Api-client\";\nexport let Actions;\n\n(function (Actions) {\n  Actions[\"GET_FEATURE_FLAGS\"] = \"RECEIVE_FEATURE_FLAGS\";\n})(Actions || (Actions = {}));\n\nconst initialState = {\n  featureFlags: {}\n};\nexport default function featureFlagsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_FEATURE_FLAGS:\n      return { ...state,\n        featureFlags: action.featureFlags\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const fetchFeatureFlags = () => {\n  return async dispatch => {\n    try {\n      const featureFlags = await getFeatureFlags();\n      featureFlags.reduce((acc, code) => {\n        acc[code.postalCode] = code;\n        return acc;\n      });\n      console.log(featureFlags);\n      dispatch({\n        type: Actions.GET_FEATURE_FLAGS,\n        featureFlags\n      });\n    } catch (error) {\n      //TODO push to logging\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/anndreadrivdahl/Desktop/demo-app/src/Store/ui.ts"],"names":["getFeatureFlags","Actions","initialState","featureFlags","featureFlagsReducer","state","action","type","GET_FEATURE_FLAGS","fetchFeatureFlags","dispatch","reduce","acc","code","postalCode","console","log","error"],"mappings":"AACA,SAAuBA,eAAvB,QAA8C,eAA9C;AAEA,WAAYC,OAAZ;;WAAYA,O;AAAAA,EAAAA,O;GAAAA,O,KAAAA,O;;AAaZ,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,YAAY,EAAE;AADwB,CAAxC;AAIA,eAAe,SAASC,mBAAT,GAGM;AAAA,MAFnBC,KAEmB,uEAFXH,YAEW;AAAA,MADnBI,MACmB;;AACnB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACO,iBAAb;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,YAAY,EAAEG,MAAM,CAACH;AAFhB,OAAP;;AAKF;AAAS;AACP,eAAOE,KAAP;AACD;AATH;AAWD;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAM;AACrC,SAAO,MAAOC,QAAP,IAAsC;AAC3C,QAAI;AACF,YAAMP,YAAY,GAAG,MAAMH,eAAe,EAA1C;AAEAG,MAAAA,YAAY,CAACQ,MAAb,CAAyC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACtDD,QAAAA,GAAG,CAACC,IAAI,CAACC,UAAN,CAAH,GAAuBD,IAAvB;AACA,eAAOD,GAAP;AACD,OAHD;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AACAO,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAEN,OAAO,CAACO,iBADP;AAEPL,QAAAA;AAFO,OAAD,CAAR;AAID,KAZD,CAYE,OAAOc,KAAP,EAAmB;AACnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAjBD;AAkBD,CAnBM","sourcesContent":["import { Dispatch } from \"redux\";\nimport { FeatureFlags, getFeatureFlags } from \"../Api-client\";\n\nexport enum Actions {\n  GET_FEATURE_FLAGS = \"RECEIVE_FEATURE_FLAGS\",\n}\n\nexport type Action = {\n  type: Actions.GET_FEATURE_FLAGS;\n  featureFlags: Record<FeatureFlags, boolean>;\n};\n//TODO add error and loading state\ntype FeatureFlagsState = {\n  featureFlags: Record<FeatureFlags, boolean | undefined>;\n};\n\nconst initialState: FeatureFlagsState = {\n  featureFlags: {} as Record<FeatureFlags, boolean | undefined>,\n};\n\nexport default function featureFlagsReducer(\n  state = initialState,\n  action: Action\n): FeatureFlagsState {\n  switch (action.type) {\n    case Actions.GET_FEATURE_FLAGS:\n      return {\n        ...state,\n        featureFlags: action.featureFlags,\n      };\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const fetchFeatureFlags = () => {\n  return async (dispatch: Dispatch<Action>) => {\n    try {\n      const featureFlags = await getFeatureFlags();\n\n      featureFlags.reduce<Record<name, value>>((acc, code) => {\n        acc[code.postalCode] = code;\n        return acc;\n      });\n      console.log(featureFlags);\n      dispatch({\n        type: Actions.GET_FEATURE_FLAGS,\n        featureFlags,\n      });\n    } catch (error: any) {\n      //TODO push to logging\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}