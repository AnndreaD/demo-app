{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from \"redux-thunk\";\nimport exhangeRates from \"./exchangeRates\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst reducer = combineReducers({\n  exhangeRates\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunkMiddleware).concat(),\n  devTools: process.env.NODE_ENV !== \"production\" // preloadedState,\n\n});\nexport default store;","map":{"version":3,"sources":["/Users/anndreadrivdahl/Desktop/demo-app/src/Store/index.tsx"],"names":["combineReducers","configureStore","thunkMiddleware","exhangeRates","persistReducer","storage","reducer","persistConfig","key","persistedReducer","store","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,SAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC9BG,EAAAA;AAD8B,CAAD,CAA/B;AAIA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBH,EAAAA;AAFoB,CAAtB;AAKA,MAAMI,gBAAgB,GAAGL,cAAc,CAACG,aAAD,EAAgBD,OAAhB,CAAvC;AAEA,MAAMI,KAAK,GAAGT,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAEG,gBADkB;AAE3BE,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BX,eAA9B,EAA+CW,MAA/C,EAHyB;AAI3BC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAJR,CAK3B;;AAL2B,CAAD,CAA5B;AAQA,eAAeP,KAAf","sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from \"redux-thunk\";\nimport exhangeRates from \"./exchangeRates\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst reducer = combineReducers({\n  exhangeRates,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(thunkMiddleware).concat(),\n  devTools: process.env.NODE_ENV !== \"production\",\n  // preloadedState,\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n"]},"metadata":{},"sourceType":"module"}