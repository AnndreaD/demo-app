{"ast":null,"code":"import { css } from \"styled-components\";\nexport const match = (name, condition) => {\n  const isValid = props => {\n    const prop = Object.keys(props).find(s => s === name);\n\n    if (prop) {\n      return props[prop] === condition;\n    }\n\n    return false;\n  };\n\n  const getCss = function () {\n    for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n      styles[_key] = arguments[_key];\n    }\n\n    return props => {\n      const [style, ...rest] = styles;\n      return isValid(props) ? css(style, ...rest) : css``;\n    };\n  };\n\n  getCss.valid = isValid;\n  return getCss;\n};","map":{"version":3,"sources":["/Users/anndreadrivdahl/Desktop/demo-app/src/components/utils.ts"],"names":["css","match","name","condition","isValid","props","prop","Object","keys","find","s","getCss","styles","style","rest","valid"],"mappings":"AAAA,SACEA,GADF,QAOO,mBAPP;AAsBA,OAAO,MAAMC,KAAK,GAAG,CACnBC,IADmB,EAEnBC,SAFmB,KAGhB;AACH,QAAMC,OAAO,GAAIC,KAAD,IAAgB;AAC9B,UAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,IAAnB,CAAyBC,CAAD,IAAOA,CAAC,KAAKR,IAArC,CAAb;;AAEA,QAAII,IAAJ,EAAU;AACR,aAAOD,KAAK,CAACC,IAAD,CAAL,KAAgBH,SAAvB;AACD;;AACD,WAAO,KAAP;AACD,GAPD;;AASA,QAAMQ,MAAM,GACV;AAAA,sCAAIC,MAAJ;AAAIA,MAAAA,MAAJ;AAAA;;AAAA,WACCP,KAAD,IAA2B;AACzB,YAAM,CAACQ,KAAD,EAAQ,GAAGC,IAAX,IAAmBF,MAAzB;AAEA,aAAOR,OAAO,CAACC,KAAD,CAAP,GAAiBL,GAAG,CAACa,KAAD,EAAe,GAAGC,IAAlB,CAApB,GAA8Cd,GAAI,EAAzD;AACD,KALD;AAAA,GADF;;AAQAW,EAAAA,MAAM,CAACI,KAAP,GAAeX,OAAf;AAEA,SAAOO,MAAP;AACD,CAxBM","sourcesContent":["import {\n  css,\n  CSSObject,\n  InterpolationFunction,\n  ThemedStyledProps,\n  FlattenInterpolation,\n  StyledProps,\n} from \"styled-components\";\n\ntype Style =\n  | InterpolationFunction<ThemedStyledProps<any, any>>\n  | TemplateStringsArray\n  | CSSObject\n  | string;\n\nexport interface StyleDefinition<P> {\n  (...styles: Style[]): (\n    props: Partial<P>\n  ) => FlattenInterpolation<StyledProps<P>>;\n  valid: (props: Partial<P>) => boolean;\n}\n\nexport const match = <P, U>(\n  name: keyof P | StyleDefinition<U>,\n  condition: any\n) => {\n  const isValid = (props: any) => {\n    const prop = Object.keys(props).find((s) => s === name);\n\n    if (prop) {\n      return props[prop] === condition;\n    }\n    return false;\n  };\n\n  const getCss =\n    (...styles: Style[]) =>\n    (props: Partial<P & U>) => {\n      const [style, ...rest] = styles;\n\n      return isValid(props) ? css(style as any, ...rest) : css``;\n    };\n\n  getCss.valid = isValid;\n\n  return getCss;\n};\n"]},"metadata":{},"sourceType":"module"}